<?xml version='1.0'?>
<signatures version='1.0'>
<enum name='DEFAULT_LOG_MAX_FILE_SIZE' value='1048576'/>
<enum name='DEFAULT_LOG_MAX_NUM_LOG_FILES' value='5'/>
<enum name='DEFAULT_LOG_ROLLING_FREQUENCY' value='86400'/>
<enum name='LOG_ASYNC_ENABLED' value='1'/>
<enum name='LOG_ASYNC_ERROR' value='0'/>
<enum name='LOG_ASYNC_INFO' value='1'/>
<enum name='LOG_ASYNC_VERBOSE' value='1'/>
<enum name='LOG_ASYNC_WARN' value='1'/>
<enum name='LOG_FLAG_ERROR' value='1'/>
<enum name='LOG_FLAG_INFO' value='4'/>
<enum name='LOG_FLAG_VERBOSE' value='8'/>
<enum name='LOG_FLAG_WARN' value='2'/>
<enum name='LOG_LEVEL_ERROR' value='1'/>
<enum name='LOG_LEVEL_INFO' value='7'/>
<enum name='LOG_LEVEL_OFF' value='0'/>
<enum name='LOG_LEVEL_VERBOSE' value='15'/>
<enum name='LOG_LEVEL_WARN' value='3'/>
<function name='DDExtractFileNameWithoutExtension'>
<arg name='filePath' declared_type='char*' const='true' type='*'/>
<arg name='copy' declared_type='BOOL' type='B'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='DDASLLogger'>
<method selector='sharedInstance' class_method='true'>
<retval declared_type='DDASLLogger*' type='@'/>
</method>
</class>
<class name='DDAbstractDatabaseLogger'>
<method selector='deleteInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='deleteOldLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteOnEverySave'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxAge'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='savePendingLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveThreshold'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setDeleteInterval:'>
<arg name='deleteInterval' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleteOnEverySave:'>
<arg name='deleteOnEverySave' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAge:'>
<arg name='maxAge' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg name='saveInterval' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveThreshold:'>
<arg name='saveThreshold' declared_type='NSUInteger' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDAbstractLogger'>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg name='formatter' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDFileLogger'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogFileManager:'>
<arg name='logFileManager' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFileManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumFileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='rollLogFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rollingFrequency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setLogFileManager:'>
<arg name='logFileManager' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumFileSize:'>
<arg name='maximumFileSize' declared_type='unsigned long long' type='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRollingFrequency:'>
<arg name='rollingFrequency' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLog'>
<method selector='addLogger:' class_method='true'>
<arg name='logger' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushLog' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' selector='log:level:flag:context:file:function:line:tag:format:' class_method='true'>
<arg name='synchronous' declared_type='BOOL' type='B' index='0'/>
<arg name='level' declared_type='int' type='i' index='1'/>
<arg name='flag' declared_type='int' type='i' index='2'/>
<arg name='context' declared_type='int' type='i' index='3'/>
<arg name='file' declared_type='char*' const='true' type='*' index='4'/>
<arg name='function' declared_type='char*' const='true' type='*' index='5'/>
<arg name='line' declared_type='int' type='i' index='6'/>
<arg name='tag' declared_type='id' type='@' index='7'/>
<arg printf_format='true' name='format' declared_type='NSString*' type='@' index='8'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='logLevelForClass:' class_method='true'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='logLevelForClassWithName:' class_method='true'>
<arg name='aClassName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='loggingQueue' class_method='true'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method selector='registeredClassNames' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='registeredClasses' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeAllLoggers' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLogger:' class_method='true'>
<arg name='logger' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogLevel:forClass:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<arg name='aClass' declared_type='Class' type='#' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogLevel:forClassWithName:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<arg name='aClassName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileFormatterDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateFormatter:'>
<arg name='dateFormatter' declared_type='NSDateFormatter*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogFileInfo'>
<method selector='addExtensionAttributeWithName:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='age'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='creationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='fileAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='hasExtensionAttributeWithName:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFilePath:'>
<arg name='filePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isArchived'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logFileWithPath:' class_method='true'>
<arg name='filePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='removeExtensionAttributeWithName:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renameFile:'>
<arg name='newFileName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseCompareByCreationDate:'>
<arg name='another' declared_type='DDLogFileInfo*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='reverseCompareByModificationDate:'>
<arg name='another' declared_type='DDLogFileInfo*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='setCreationDate:'>
<arg name='creationDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileAttributes:'>
<arg name='fileAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileName:'>
<arg name='fileName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg name='filePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsArchived:'>
<arg name='isArchived' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationDate:'>
<arg name='modificationDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileManagerDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogsDirectory:'>
<arg name='logsDirectory' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogMessage'>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithLogMsg:level:flag:context:file:function:line:tag:'>
<arg name='logMsg' declared_type='NSString*' type='@' index='0'/>
<arg name='logLevel' declared_type='int' type='i' index='1'/>
<arg name='logFlag' declared_type='int' type='i' index='2'/>
<arg name='logContext' declared_type='int' type='i' index='3'/>
<arg name='file' declared_type='char*' const='true' type='*' index='4'/>
<arg name='function' declared_type='char*' const='true' type='*' index='5'/>
<arg name='line' declared_type='int' type='i' index='6'/>
<arg name='tag' declared_type='id' type='@' index='7'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='methodName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='threadID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='DDTTYLogger'>
<method selector='sharedInstance' class_method='true'>
<retval declared_type='DDTTYLogger*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='ddLogLevel' class_method='true'>
<retval declared_type='int' type='i'/>
</method>
<method selector='ddSetLogLevel:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRollAndArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='formatLogMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='logMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setLogFormatter:'>
<arg name='formatter' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLogFiles:'>
<arg name='maximumNumberOfLogFiles' declared_type='NSUInteger' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='DDLogFileManager'>
<method type='@8@0:4' selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' selector='didArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didRollAndArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='I8@0:4' selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method type='v12@0:4I8' selector='setMaximumNumberOfLogFiles:'>
<arg name='maximumNumberOfLogFiles' declared_type='NSUInteger' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFormatter'>
<method type='@12@0:4@8' selector='formatLogMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogger'>
<method type='v8@0:4' selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4@8' selector='logMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='^{dispatch_queue_s=}8@0:4' selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method type='v12@0:4@8' selector='setLogFormatter:'>
<arg name='formatter' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDRegisteredDynamicLogging'>
<method type='i8@0:4' selector='ddLogLevel' class_method='true'>
<retval declared_type='int' type='i'/>
</method>
<method type='v12@0:4i8' selector='ddSetLogLevel:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
